<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c53d7704-ed86-4103-9262-9ee34615224b" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitToolBoxStore">
    <option name="projectConfigVersion" value="5" />
    <option name="recentBranches">
      <RecentBranches>
        <option name="branchesForRepo">
          <list>
            <RecentBranchesForRepo>
              <option name="branches">
                <list>
                  <RecentBranch>
                    <option name="branchName" value="feature/mock-service" />
                    <option name="lastUsedInstant" value="1717857790" />
                  </RecentBranch>
                  <RecentBranch>
                    <option name="branchName" value="feature/new-mock" />
                    <option name="lastUsedInstant" value="1717857789" />
                  </RecentBranch>
                </list>
              </option>
              <option name="repositoryRootUrl" value="file://$PROJECT_DIR$/.." />
            </RecentBranchesForRepo>
          </list>
        </option>
      </RecentBranches>
    </option>
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="alwaysUpdateSnapshots" value="true" />
        <option name="failureBehavior" value="NEVER" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2hVMVKHYffhsOqeAERM81RfqbRz" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.MockingLibraryApplication.executor": "Run",
    "Docker.agent/Dockerfile.executor": "Run",
    "Docker.app/Dockerfile.executor": "Run",
    "Docker.docker-compose.yml.agent: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.app: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.db: Compose Deployment.executor": "Run",
    "Maven.agent [clean,install].executor": "Run",
    "Maven.mocking-library-agent [clean,compile].executor": "Run",
    "Maven.mocking-library-agent [clean,install].executor": "Run",
    "Maven.mocking-library-agent [clean,package].executor": "Run",
    "Maven.mocking-library-agent [clean].executor": "Run",
    "Maven.mocking-library-agent [install].executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "feature/mock-service",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/shrutimishra/Documents/GitHub/lib-mock-service/mocking-library",
    "onboarding.tips.debug.path": "/Users/shrutimishra/Documents/GitHub/lib-mock-service/app/src/main/java/com/mock/Main.java",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "settings.build.tools.auto.reload": "ALL",
    "settings.editor.selected.configurable": "MavenSettings"
  }
}]]></component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean compile" />
      <command value="mvn install" />
      <command value="mvn clean" />
      <command value="mvn clean package" />
      <command value="mvn clean install" />
    </option>
  </component>
  <component name="RunManager" selected="Application.Main">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <envs>
        <env name="DB_URL" value="jdbc:postgresql://localhost:5432/mock_service_dev" />
        <env name="DB_USERNAME" value="postgres" />
        <env name="DB_PASSWORD" value="Gitian620@" />
      </envs>
      <option name="MAIN_CLASS_NAME" value="com.mock.Main" />
      <module name="app" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.mock.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MockingLibraryApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.mockinglibrary.MockingLibraryApplication" />
      <module name="app" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.mockinglibrary.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.agent: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="agent" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.app: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="app" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.db: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="db" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Application.Main" />
      <item itemvalue="Application.MockingLibraryApplication" />
      <item itemvalue="Docker.docker-compose.yml.agent: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.app: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.db: Compose Deployment" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
        <item itemvalue="Application.MockingLibraryApplication" />
        <item itemvalue="Docker.docker-compose.yml.app: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.db: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.agent: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c53d7704-ed86-4103-9262-9ee34615224b" name="Changes" comment="" />
      <created>1717674813722</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1717674813722</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/../app/src/main/java/com/mock/Main.java</url>
          <line>13</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>